@model JocoFoodMenuService.Models.MenuInventoryClassList

@{
    ViewData["Title"] = "Create";
}

<p class="display-4">
    Create your daily menu

    <button id="createBtn" class="float-right btn peach-gradient mt-4 rounded-pill">Create menu</button>
</p>

<div id="smartwizard">
    <ul class="nav">
        <li>
            <a class="nav-link" href="#step-1">
                Rices
            </a>
        </li>
        <li>
            <a class="nav-link" href="#step-2">
                Meats
            </a>
        </li>
        <li>
            <a class="nav-link" href="#step-3">
                Grains
            </a>
        </li>
        <li>
            <a class="nav-link" href="#step-4">
                Complements
            </a>
        </li>
        <li>
            <a class="nav-link" href="#step-5">
                Beverages
            </a>
        </li>
    </ul>

    <div class="toolbar toolbar-bottom" role="toolbar" style="text-align: right;">
        <button class="btn sw-btn-prev disabled" type="button">Previous</button>
        <button class="btn sw-btn-next" type="button">Next</button>
    </div>

    <div class="tab-content">
        <div id="step-1" class="tab-pane" role="tabpanel">
            <div class="row">
                @{
                    foreach (var item in Model.Rice)
                    {
                        <div class="col-md-3">
                            <div class="card mb-4">
                                <div class="view overlay">
                                    <img src="@Url.Content(item.ImageUrl)" class="card-img-top" alt="Rice picture" />
                                </div>
                                <div class="card-body">
                                    <p class="text-center">
                                        <label>@Html.DisplayFor(ModelItem => item.Name)</label>
                                    </p>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
        <div id="step-2" class="tab-pane" role="tabpanel">
            <div class="row">
                @{
                    foreach (var item in Model.Meats)
                    {
                        <div class="col-md-3">
                            <div class="card mb-4">
                                <div class="view overlay">
                                    <img src="@Url.Content(item.ImageUrl)" class="card-img-top" alt="Meat picture" />
                                </div>
                                <div class="card-body">
                                    <p class="text-center">
                                        <label>@Html.DisplayFor(ModelItem => item.Name)</label>
                                    </p>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
        <div id="step-3" class="tab-pane" role="tabpanel">
            <div class="row">
                @{
                    foreach (var item in Model.Grains)
                    {
                        <div class="col-md-3">
                            <div class="card mb-4">
                                <div class="view overlay">
                                    <img src="@Url.Content(item.ImageUrl)" class="card-img-top" alt="Grain picture" />
                                </div>
                                <div class="card-body">
                                    <p class="text-center">
                                        <label>@Html.DisplayFor(ModelItem => item.Name)</label>
                                    </p>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
        <div id="step-4" class="tab-pane" role="tabpanel">
            <div class="row">
                @{
                    foreach (var item in Model.Complements)
                    {
                        <div class="col-md-3">
                            <div class="card mb-4">
                                <div class="view overlay">
                                    <img src="@Url.Content(item.ImageUrl)" class="card-img-top" alt="Complement picture" />
                                </div>
                                <div class="card-body">
                                    <p class="text-center">
                                        <label>@Html.DisplayFor(ModelItem => item.Name)</label>
                                    </p>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
        <div id="step-5" class="tab-pane" role="tabpanel">
            <div class="row">
                @{
                    foreach (var item in Model.Beverages)
                    {
                        <div class="col-md-3">
                            <div class="card mb-4">
                                <div class="view overlay">
                                    <img src="@Url.Content(item.ImageUrl)" class="card-img-top" alt="Beverage picture" />
                                </div>
                                <div class="card-body">
                                    <p class="text-center">
                                        <label>@Html.DisplayFor(ModelItem => item.Name)</label>
                                    </p>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

@*@await Html.PartialAsync("_SmartWizardMenuCreator", (MenuInventoryClassList)ViewBag.InventoryList)*@

<style>
    div.card {
        cursor: pointer;
        transition: 0.3s;
    }

        div.card:hover {
            transform: scale(1.03);
            -webkit-box-shadow: 0px 0px 20px -6px rgba(51,242,17,1);
            -moz-box-shadow: 0px 0px 20px -6px rgba(51,242,17,1);
            box-shadow: 0px 0px 20px -6px rgba(51,242,17,1);
        }
</style>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {

            // SmartWizard initialize

            $('#smartwizard').smartWizard({
                anchorSettings: {
                    enableAllAnchors: true,
                    removeDoneStepOnNavigateBack: true
                },
                toolbarSettings: {
                    showNextButton: false, // show/hide a Next button
                    showPreviousButton: false, // show/hide a Previous button
            }
            });

            $(document).on('click', 'div.card', function () {

                const $divP = $(this).find('p');

                if ($divP.children('svg').length > 0) {
                    $divP.children('svg').remove();
                } else {

                    $divP.append(`<svg style="color:#32ff7e; font-size: 24px" width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-check-circle" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
              <path fill-rule="evenodd" d="M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
              <path fill-rule="evenodd" d="M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z"/>
                                </svg>`);
                }
            });

            $('#createBtn').on('click', function () {
                let foodNames = [];
                let foodCategories = {'rice': [], 'meat': [], 'grain': [], 'complement': [], 'beverage': []};

                for (var i = 0; i <= 5; i++) {
                    $('#step-' + (i+1)).find('div.card').each(function () {
                        if ($(this).find('svg').length > 0) {
                            foodNames.push({ nombre: $(this).find('label').html(), foto: $(this).find('img').attr('src') });
                        }
                    });
                    switch (i) {
                        case 0:
                            foodNames.forEach(item => {
                                foodCategories.rice.push(item);
                            })
                            break;
                        case 1:
                            foodNames.forEach(item => {
                                foodCategories.meat.push(item);
                            });
                            break;
                        case 2:
                            foodNames.forEach(item => {
                                foodCategories.grain.push(item);
                            });
                            break;
                        case 3:
                            foodNames.forEach(item => {
                                foodCategories.complement.push(item);
                            });
                            break;
                        case 4:
                            foodNames.forEach(item => {
                                foodCategories.beverage.push(item);
                            });
                            break;
                        default:
                    }

                    foodNames = [];
                }

                if (confirm('Resume\n\n\nArroces: ' + foodCategories.rice.map(getNames) + '\n\nCarnes: ' + foodCategories.meat.map(getNames) + '\n\nGranos: ' + foodCategories.grain.map(getNames) + '\n\nComplementos: ' + foodCategories.complement.map(getNames) + '\n\nBebidas: ' + foodCategories.beverage.map(getNames))) {

                    let values = JSON.stringify(foodCategories);

                    $.ajax({
                        url: "@Url.Action("Create", "MenuCreators")",
                        type: "post",
                        data: {'foodCategories' : values },
                        success: function (response) {
                            if (response == false) {
                                alert('the was an error');
                            } else {
                                Swal.fire({
                                    position: 'center',
                                    icon: 'success',
                                    title: 'The menu has been saved',
                                    showConfirmButton: false,
                                    timer: 1500
                                })
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            console.log(textStatus, errorThrown);
                        }

                    });
                }

            });

        });

        function getNames(item) {
            return item['nombre'];
        }

    </script>
}
